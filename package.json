{
  "name": "leaflet.pointinpolygon",
  "version": "1.0.0",
  "description": "<a href=\"https://github.com/hayeswise/Leaflet.PointInPolygon/blob/master/LICENSE\"><img align=\"right\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\"></a><br/>\r <img align=\"left\" src=\"https://github.com/hayeswise/Leaflet.PointInPolygon/blob/master/PiPwn-logo.png?raw=true\">\r Leaflet.PointInPolygon is a [Leaflet](http://leafletjs.com/) plugin/extension that provides point-in-polygon functions \r based on Dan Sunday's C++ winding number implementation. Functions `contains()`, `getWindingNumber()`, and `isLeft()` extend\r Leaflet classes `L.Polygon`, `L.Polyline`, and `L.LatLng`.\r <a href=\"http://leafletjs.com/\"><img align=\"right\" src=\"https://s3.amazonaws.com/uploads.uservoice.com/logo/design_setting/94572/original/leaflet-logo.png?1329832491\"></a>\r The winding number method has an advantage to the crossing number method since \r \"the winding number accurately determines if a point is inside a nonsimple closed polygon\" \r (See [Inclusion of a Point in Polygon](http://geomalgorithms.com/a03-_inclusion.html) by Dan Sunday).",
  "main": "wise-leaflet-pip.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/CityOfPhiladelphia/Leaflet.PointInPolygon.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/CityOfPhiladelphia/Leaflet.PointInPolygon/issues"
  },
  "homepage": "https://github.com/CityOfPhiladelphia/Leaflet.PointInPolygon#readme"
}
